#Binary Search:
int binarySearch(int arr[],int l,int r,int x)
{
if(r>=l)
int mid=l+(r-1)/2;
if(arr[mid]==x)
return mid;
if(arr[mid]>x)
return binarySearch(arr,l,mid-1,x);
return binarySearch(arr,mid+1,r,x);
}
return -1;
}



#Find missing element in AP:


static int findMissingUtil(int arr[],int low,int high,int diff)
{
if(high<=low)
return INTEGER.MAX_VALUE;

int mid=low+(high-low)/2;

if(arr[mid+1]-arr[mid]!=diff)
return (arr[mid]+diff);

if(mid>0 && arr[mid]-arr[mid-1]!=diff)
return (arr[mid-1]+diff);

if(arr[mid]==arr[0]+mid*diff)
return findMissingUtil(arr,mid+1,high,diff)

return findMissingUtil(arr,low,mid-1,diff);
}




static int findMissing(int arr[],int n)
{
int diff=(arr[n-1]+arr[0])/n;
return findMissingUtil(arr,o,n-1,diff);
}





public sattic void mmain(String args[])
{
int arr[]={2,4,8,10,12};
int n=arr.length;
System.out.println(findMissing(arr,n));
}